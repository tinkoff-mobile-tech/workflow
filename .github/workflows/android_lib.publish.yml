name: publish android aar

on:
  workflow_call:
    secrets:
      gpg_key:
        required: true
      sign_ossrh_gradle_properties:
        required: true
    inputs:
      java_version:
        default: '11'
        required: false
        type: string
      file_with_version_name:
        default: 'gradle.properties'
        required: false
        type: string

jobs:
  publish:
    name: Release AAR
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          #ref: ${{ github.event.repository.default_branch }}
      - name: set up JDK ${{ inputs.java_version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.java_version }}
          distribution: 'temurin'
          cache: gradle

      - name: Retrieve the secret and decode it to a file
        env:
          GPG_KEY: ${{ secrets.gpg_key }}
        run: echo "$GPG_KEY" | base64 --decode > $HOME/secring.gpg

      - name: Retrieve the gradle.properties
        env:
            SIGN_OSSRH_GRADLE_PROPERTIES: ${{ secrets.sign_ossrh_gradle_properties }}
        run: |
          mkdir -p ~/.gradle
          echo -en "$SIGN_OSSRH_GRADLE_PROPERTIES" > ~/.gradle/gradle.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Check version (fail if version tag is exists)
        id: version
        env:
          FILE_WITH_VERISON_NAME: ${{ inputs.file_with_version_name }}
        run: |
          TAG_NAME=$(grep -oP "^VERSION_NAME=\K([\d.]+)" ${FILE_WITH_VERISON_NAME})
          (! git ls-remote --tags | grep refs/tags/${TAG_NAME})
          echo "::set-output name=tag_name::$TAG_NAME"

      - name: Upload artifacts
        id: artifacts
        run: |
          if ./gradlew tasks --all | grep uploadArchives; then
              ./gradlew uploadArchives -Psigning.secretKeyRingFile=$HOME/secring.gpg -Prelease
          else
              ./gradlew publishReleasePublicationToMavenRepository -Psigning.secretKeyRingFile=$HOME/secring.gpg -Prelease
          fi

      - name: Push tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.version.outputs.tag_name }}

      - name: Create Release âœ…
        id: create_release
        run: |
          set -x
          assets=()
          for asset in $(find . -name *.aar); do
            assets+=("-a" "$asset")
          done
          hub release create "${assets[@]}" -m "$TAG_NAME" "$TAG_NAME"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TAG_NAME: ${{ steps.version.outputs.tag_name }}
